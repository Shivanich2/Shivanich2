#include <stdio.h>
#include <string.h>
#include <ctype.h>

#define MAX 100

char stack[MAX];
int top = -1;

void push(char val) {
    if (top == MAX - 1) {
        printf("Stack Overflow\n");
    } else {
        top++;
        stack[top] = val;
    }
}

void pop() {
    if (top == -1) {
        printf("Stack Underflow\n");
    } else {
        top--;
    }
}

char peek() {
    if (top == -1) {
        return '\0';
    }
    return stack[top];
}

void display() {
    if (top == -1) {
        printf("Stack is empty\n");
    } else {
        for (int i = 0; i <= top; i++) {
            printf("%c", stack[i]);
        }
    }
    printf("\n");
}

int precedence(char c) {
    if (c == '^') return 3;
    else if (c == '*' || c == '/') return 2;
    else if (c == '+' || c == '-') return 1;
    else return 0;
}

void infixToPostfix(const char *s) {
    int length = strlen(s);
    for (int i = 0; i < length; i++) {
        if (isalnum(s[i])) { 
            printf("%c", s[i]);
        } else if (s[i] == '(') {
            push(s[i]);
            
        } else if (s[i] == ')') {
            while (top != -1 && peek() != '(') {
                printf("%c", peek());
                pop();
            }
            pop(); 
        } else {
            while (top != -1 && precedence(s[i]) <= precedence(peek())) {
                printf("%c", peek());
                pop();
            }
            push(s[i]);
        }
    }
    while (top != -1) {
        printf("%c", peek());
        pop();
    }
}

int main() {
    char str[MAX];
    printf("Enter the arithmetic expression: ");
    scanf("%s", str);
    infixToPostfix(str);
    return 0;
}
